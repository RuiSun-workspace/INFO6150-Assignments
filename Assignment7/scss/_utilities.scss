@use "sass:map";
@use "sass:math";

/* Variables */
$color-primary: #6c4a3d;
$color-accent:  #d17b0f;
$gray-900: #1a1a1a;
$gray-700: #444;
$gray-200: #e8e8e8;
$gray-100: #f2f2f2;
$gray-50:  #fafafa;

$font-sans: system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif;
$radius: 16px;

$spaces: (1:.25rem, 2:.5rem, 3:1rem, 4:1.5rem, 5:2rem, 6:3rem);
$space-3: map.get($spaces, 3);
$space-4: map.get($spaces, 4);
$space-5: map.get($spaces, 5);
$space-6: map.get($spaces, 6);

/* CSS Custom Properties via interpolation */
:root{
  --color-primary:#{$color-primary};
  --color-accent:#{$color-accent};
  --radius:#{$radius};
  --space:#{$space-3};
  --font-sans:#{$font-sans};
}
.theme-light{ --bg:#ffffff; --fg:#111111; }
.theme-dark { --bg:#0e0e0e; --fg:#f7f7f7; }

/* Functions + 条件 */
@function rem($px) { @return math.div($px, 16) * 1rem; }
@function elevation($level){
  @if $level <= 1 { @return 0 1px 2px rgba(0,0,0,.06); }
  @else if $level == 2 { @return 0 6px 12px rgba(0,0,0,.08); }
  @else { @return 0 12px 24px rgba(0,0,0,.12); }
}

/* Mixins */
$breakpoints:(sm:480px, md:768px, lg:1024px);
@mixin respond($bp){ @media (min-width: map.get($breakpoints,$bp)){ @content; } }
@mixin center-flex($gap:.5rem){ display:flex; align-items:center; justify-content:space-between; gap:$gap; }

/* Maps + @each（主题工具类） */
$brand-colors:(primary:$color-primary, accent:$color-accent);
@each $n, $v in $brand-colors{
  .text-#{$n}{ color:#{$v}; }
  .bg-#{$n}{ background-color:#{$v}; color:#fff; }
}

/* @for loops（工具类） */
@for $i from 1 through 6 {
  .u-m-#{$i}{ margin: map.get($spaces,$i); }
  .u-p-#{$i}{ padding: map.get($spaces,$i); }
  .u-gap-#{$i}{ gap: map.get($spaces,$i); }
}

/* 占位选择器（供 components 扩展） */
%card {
  background:#fff; border-radius:$radius; box-shadow:elevation(1);
  padding:$space-4; border:1px solid $gray-200; transition:box-shadow .2s ease;
  &:hover{ box-shadow:elevation(2); }
}

/* 导出供其他文件使用的“公共 API”变量/函数/混入（通过命名空间 utilities.*） */
